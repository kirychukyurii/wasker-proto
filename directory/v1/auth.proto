syntax = "proto3";

package directory.v1;

import "google/api/annotations.proto";
import "google/rpc/error_details.proto";

service AuthService {
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/api/v1alpha1/directory/login"
      body: "*"
    };
  }
}

message LoginRequest {
  string username = 1;
  string password = 2;
}

message LoginResponse {
  AccessToken authorization = 1;
}

// OAuth 2.0 Access Token Response compatible
message AccessToken {
  // REQUIRED. The access token issued by the authorization server.
  string access_token = 1 [ json_name = "access_token" ];
  // REQUIRED. The type of the token issued. Value is case insensitive.
  string token_type = 2 [ json_name = "token_type" ];
  // RECOMMENDED. The lifetime in seconds of the access token.
  int32 expires_in = 3 [ json_name = "expires_in" ];
  // OPTIONAL. The refresh token, which can be used to obtain
  // new access tokens using the same authorization grant.
  string refresh_token = 4 [ json_name = "refresh_token" ];
  // OPTIONAL, if identical to the scope requested by the client;
  // otherwise, REQUIRED. The scope of the access token.
  // repeated string scope = 5 [ json_name = "scope" ];
  // REQUIRED if the "state" parameter was present in the client
  // authorization request. The exact value received from the client.
  string state = 5 [ json_name = "state" ];
}