syntax = "proto3";

package directory.v1;

import "common/v1/lookup.proto";

import "google/api/annotations.proto";
import "google/rpc/error_details.proto";

service ScopeService {
  rpc ReadScope(ReadScopeRequest) returns (ReadScopeResponse) {
    option (google.api.http) = {
      get: "/api/v1alpha1/directory/role/scopes/{id}"
    };
  }

  rpc UpdateScope(UpdateScopeRequest) returns (UpdateScopeResponse) {
    option (google.api.http) = {
      put: "/api/v1alpha1/directory/role/scopes/{scope.id}"
      body: "*"
    };
  }

  rpc DeleteScopes(DeleteScopesRequest) returns (DeleteScopesResponse) {
    option (google.api.http) = {
      delete: "/api/v1alpha1/directory/role/scopes/{id}"
    };
  }

  rpc CreateScope(CreateScopeRequest) returns (CreateScopeResponse) {
    option (google.api.http) = {
      post: "/api/v1alpha1/directory/role/scopes"
      body: "*"
    };
  }

  rpc SearchScopes(SearchScopesRequest) returns (SearchScopesResponse) {
    option (google.api.http) = {
      get: "/api/v1alpha1/directory/role/scopes"
      additional_bindings {
        post: "/api/v1alpha1/directory/role/scopes/search"
        body: "*"
      }
    };
  }
}

message Scope {
  int64  id = 1;
  string name = 2;
  ScopeAction action = 3;

  int64  created_at = 7;
  common.v1.ObjectId created_by = 8;

  int64  updated_at = 9;
  common.v1.ObjectId updated_by = 10;
}

message ScopeAction {
  bool create = 1;
  bool read = 2;
  bool update = 3;
  bool delete = 4;
}

message CreateScopeRequest {
  Scope   scope = 1;
}

message CreateScopeResponse {
  Scope scope = 1;
}

message ReadScopeRequest {
  int64 id = 1;
  repeated string fields = 2;
}

message ReadScopeResponse {
  Scope scope = 1;
}

message UpdateScopeRequest {
  Scope scope = 1;
  repeated string fields = 2;
}

message UpdateScopeResponse {
  Scope updated = 1;
}

message DeleteScopesRequest {
  int64 id = 1;
  bool permanent = 2;
}

message DeleteScopesResponse {
  repeated Scope deleted = 1;
}

message SearchScopesRequest {
  repeated int64 id = 1;
  repeated int64 not_id = 2;
  string q = 3;
  string name = 4;
  string username = 5;

  repeated string fields = 6;
  repeated string sort = 7;
  int32 page = 8;
  int32 size = 9;
}

message SearchScopesResponse {
  repeated Scope items = 1;

  int32 page = 2;
  int32 size = 3;
  bool next = 4;
}